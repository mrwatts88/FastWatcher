// Fast Watcher - Search Interface

// Color palette
global Colors {
    out property <color> bg: #e0e1dd;
    out property <color> text: #1d1a05;
    out property <color> accent-1: #778da9;
    out property <color> accent-2: #17255a;
    out property <color> danger: #b9314f;
    out property <color> white: #ffffff;
    out property <color> border: #c0c1bd;
}

// Entity structs for data
export struct SightingItem {
    id: int,
    common-name: string,
    date: string,
    location: string,
}

export struct TaxonItem {
    id: int,
    rank: string,
    common-name: string,
    taxonomy: string,
}

export struct TripItem {
    id: int,
    name: string,
    date: string,
    location: string,
}

// Sighting card component
component SightingCard inherits Rectangle {
    in property <SightingItem> item;
    callback clicked();

    height: 70px;
    background: Colors.white;
    border-radius: 6px;
    border-width: 1px;
    border-color: Colors.border;

    states [
        hover when touch.has-hover: {
            background: #f5f5f5;
        }
    ]

    touch := TouchArea {
        clicked => { root.clicked(); }
    }

    HorizontalLayout {
        padding: 12px;
        spacing: 8px;

        VerticalLayout {
            spacing: 4px;

            Text {
                text: item.common-name;
                font-size: 15px;
                font-weight: 600;
                color: Colors.text;
            }

            if item.date != "" || item.location != "": Text {
                text: (item.date != "" ? item.date : "") + (item.date != "" && item.location != "" ? " • " : "") + (item.location != "" ? item.location : "");
                font-size: 12px;
                color: Colors.accent-1;
            }
        }
    }
}

// Taxon card component
component TaxonCard inherits Rectangle {
    in property <TaxonItem> item;
    callback clicked();

    height: 70px;
    background: Colors.white;
    border-radius: 6px;
    border-width: 1px;
    border-color: Colors.border;

    states [
        hover when touch.has-hover: {
            background: #f5f5f5;
        }
    ]

    touch := TouchArea {
        clicked => { root.clicked(); }
    }

    HorizontalLayout {
        padding: 12px;
        spacing: 8px;

        VerticalLayout {
            spacing: 4px;

            HorizontalLayout {
                spacing: 8px;

                Text {
                    text: item.common-name;
                    font-size: 15px;
                    font-weight: 600;
                    color: Colors.text;
                }

                Rectangle {
                    width: 50px;
                    height: 18px;
                    background: Colors.accent-1;
                    border-radius: 3px;

                    Text {
                        text: item.rank;
                        font-size: 10px;
                        font-weight: 600;
                        color: Colors.white;
                        horizontal-alignment: center;
                        vertical-alignment: center;
                    }
                }
            }

            Text {
                text: item.taxonomy;
                font-size: 12px;
                color: Colors.accent-1;
            }
        }
    }
}

// Trip card component
component TripCard inherits Rectangle {
    in property <TripItem> item;
    callback clicked();

    height: 70px;
    background: Colors.white;
    border-radius: 6px;
    border-width: 1px;
    border-color: Colors.border;

    states [
        hover when touch.has-hover: {
            background: #f5f5f5;
        }
    ]

    touch := TouchArea {
        clicked => { root.clicked(); }
    }

    HorizontalLayout {
        padding: 12px;
        spacing: 8px;

        VerticalLayout {
            spacing: 4px;

            Text {
                text: item.name;
                font-size: 15px;
                font-weight: 600;
                color: Colors.text;
            }

            if item.date != "" || item.location != "": Text {
                text: (item.date != "" ? item.date : "") + (item.date != "" && item.location != "" ? " • " : "") + (item.location != "" ? item.location : "");
                font-size: 12px;
                color: Colors.accent-1;
            }
        }
    }
}

// Detail view component
component DetailView inherits Rectangle {
    in property <string> entity-type;
    in property <int> entity-id;
    callback back();

    background: Colors.bg;

    VerticalLayout {
        padding: 20px;
        spacing: 20px;

        // Back button
        Rectangle {
            height: 40px;
            width: 100px;
            background: transparent;

            TouchArea {
                clicked => { root.back(); }
            }

            HorizontalLayout {
                spacing: 8px;

                Text {
                    text: "←";
                    font-size: 20px;
                    color: Colors.accent-2;
                }

                Text {
                    text: "Back";
                    font-size: 16px;
                    color: Colors.accent-2;
                    vertical-alignment: center;
                }
            }
        }

        // Detail content
        VerticalLayout {
            spacing: 12px;

            Text {
                text: entity-type + " Detail";
                font-size: 28px;
                font-weight: 700;
                color: Colors.text;
            }

            Text {
                text: "ID: " + entity-id;
                font-size: 18px;
                color: Colors.accent-1;
            }

            Text {
                text: "(Detailed view coming soon...)";
                font-size: 14px;
                color: Colors.accent-1;
            }
        }
    }
}

// Main app window
export component AppWindow inherits Window {
    // View state
    in-out property <string> current-view: "search";
    in-out property <int> detail-entity-id: 0;

    // Search properties
    in-out property <string> search-text;
    in property <bool> is-searching: search-text.character-count >= 3;

    // Model properties for results
    in-out property <[SightingItem]> sightings-model;
    in-out property <[TaxonItem]> taxa-model;
    in-out property <[TripItem]> trips-model;

    // Callbacks
    callback search-changed(string);
    callback view-sighting-detail(int);
    callback view-taxon-detail(int);
    callback view-trip-detail(int);
    callback back-to-search();

    title: "Fast Watcher";
    background: Colors.bg;
    min-width: 800px;
    min-height: 600px;

    // Search view
    if current-view == "search": VerticalLayout {
        padding: 20px;
        spacing: 16px;

        // Search input container
        Rectangle {
            height: 50px;
            background: Colors.white;
            border-radius: 8px;
            border-width: 2px;
            border-color: Colors.border;

            HorizontalLayout {
                padding-left: 16px;
                padding-right: 16px;

                TextInput {
                    text <=> root.search-text;
                    font-size: 16px;
                    color: Colors.text;
                    vertical-alignment: center;

                    edited() => {
                        root.search-changed(self.text);
                    }
                }
            }
        }

        // Results area
        if root.is-searching: Flickable {
            viewport-height: content-layout.preferred-height;

            content-layout := VerticalLayout {
                spacing: 24px;

                // Sightings section
                if root.sightings-model.length > 0: VerticalLayout {
                    spacing: 8px;

                    Text {
                        text: "Sightings (" + root.sightings-model.length + ")";
                        font-size: 14px;
                        font-weight: 600;
                        color: Colors.text;
                    }

                    Rectangle {
                        height: 1px;
                        background: Colors.accent-1;
                    }

                    for item in root.sightings-model: SightingCard {
                        item: item;
                        clicked => {
                            root.view-sighting-detail(item.id);
                        }
                    }
                }

                // Taxa section
                if root.taxa-model.length > 0: VerticalLayout {
                    spacing: 8px;

                    Text {
                        text: "Taxa (" + root.taxa-model.length + ")";
                        font-size: 14px;
                        font-weight: 600;
                        color: Colors.text;
                    }

                    Rectangle {
                        height: 1px;
                        background: Colors.accent-1;
                    }

                    for item in root.taxa-model: TaxonCard {
                        item: item;
                        clicked => {
                            root.view-taxon-detail(item.id);
                        }
                    }
                }

                // Trips section
                if root.trips-model.length > 0: VerticalLayout {
                    spacing: 8px;

                    Text {
                        text: "Trips (" + root.trips-model.length + ")";
                        font-size: 14px;
                        font-weight: 600;
                        color: Colors.text;
                    }

                    Rectangle {
                        height: 1px;
                        background: Colors.accent-1;
                    }

                    for item in root.trips-model: TripCard {
                        item: item;
                        clicked => {
                            root.view-trip-detail(item.id);
                        }
                    }
                }

                // Empty state
                if root.sightings-model.length == 0 && root.taxa-model.length == 0 && root.trips-model.length == 0: VerticalLayout {
                    alignment: center;
                    min-height: 200px;

                    Text {
                        text: "No results found";
                        font-size: 14px;
                        color: Colors.accent-1;
                        horizontal-alignment: center;
                    }
                }
            }
        }

        // Welcome message
        if !root.is-searching: VerticalLayout {
            alignment: center;

            Text {
                text: "Type at least 3 characters to search";
                font-size: 14px;
                color: Colors.accent-1;
                horizontal-alignment: center;
            }
        }
    }

    // Detail views
    if current-view == "sighting-detail": DetailView {
        entity-type: "Sighting";
        entity-id: root.detail-entity-id;
        back => { root.back-to-search(); }
    }

    if current-view == "taxon-detail": DetailView {
        entity-type: "Taxon";
        entity-id: root.detail-entity-id;
        back => { root.back-to-search(); }
    }

    if current-view == "trip-detail": DetailView {
        entity-type: "Trip";
        entity-id: root.detail-entity-id;
        back => { root.back-to-search(); }
    }
}
